AWSTemplateFormatVersion: '2010-09-09'
Resources:
  NutriScanOCRRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: 'NutriScanOCRPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                Resource: 'arn:aws:s3:::nutriscan-uploads-1/*'
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: 'Allow'
                Action:
                  - 'textract:DetectDocumentText'
                Resource: '*'
        - PolicyName: 'APIGatewayInvoke'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'execute-api:Invoke'
                  - 'execute-api:ManageConnections'
                Resource: '*'

  NutriScanOCRFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'NutriScanOCR'
      Handler: 'index.handler'
      Role: !GetAtt NutriScanOCRRole.Arn
      Code:
        S3Bucket: 'nutriscan-lambda'
        S3Key: 'function.zip'
      Runtime: 'nodejs18.x'
      Environment:
        Variables:
          S3_BUCKET: 'nutriscan-uploads-1'
      MemorySize: 1024
      Timeout: 30

  NutriScanAPI:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: 'NutriScanAPI'
      Description: 'API for NutriScan OCR Service'

  UploadLabelResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt NutriScanAPI.RootResourceId
      PathPart: 'upload-label'
      RestApiId: !Ref NutriScanAPI

  ParsedDataResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt NutriScanAPI.RootResourceId
      PathPart: 'parsed-data'
      RestApiId: !Ref NutriScanAPI

  ValidateDataResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt NutriScanAPI.RootResourceId
      PathPart: 'validate-data'
      RestApiId: !Ref NutriScanAPI

  HealthCheckResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt NutriScanAPI.RootResourceId
      PathPart: 'health-check'
      RestApiId: !Ref NutriScanAPI

  UploadLabelMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: 'POST'
      ResourceId: !Ref UploadLabelResource
      RestApiId: !Ref NutriScanAPI
      AuthorizationType: 'NONE'
      Integration:
        Type: 'AWS_PROXY'
        IntegrationHttpMethod: 'POST'
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NutriScanOCRFunction.Arn}/invocations'

  ParsedDataMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: 'GET'
      ResourceId: !Ref ParsedDataResource
      RestApiId: !Ref NutriScanAPI
      AuthorizationType: 'NONE'
      Integration:
        Type: 'AWS_PROXY'
        IntegrationHttpMethod: 'GET'
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NutriScanOCRFunction.Arn}/invocations'

  ValidateDataMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: 'POST'
      ResourceId: !Ref ValidateDataResource
      RestApiId: !Ref NutriScanAPI
      AuthorizationType: 'NONE'
      Integration:
        Type: 'AWS_PROXY'
        IntegrationHttpMethod: 'POST'
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NutriScanOCRFunction.Arn}/invocations'

  HealthCheckMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      HttpMethod: 'GET'
      ResourceId: !Ref HealthCheckResource
      RestApiId: !Ref NutriScanAPI
      AuthorizationType: 'NONE'
      Integration:
        Type: 'AWS_PROXY'
        IntegrationHttpMethod: 'GET'
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NutriScanOCRFunction.Arn}/invocations'

  NutriScanDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn: 
      - UploadLabelMethod
      - ParsedDataMethod
      - ValidateDataMethod
      - HealthCheckMethod
    Properties:
      RestApiId: !Ref NutriScanAPI

  NutriScanStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId: !Ref NutriScanDeployment
      RestApiId: !Ref NutriScanAPI
      StageName: 'prod'

  LambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref NutriScanOCRFunction
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${NutriScanAPI}/*'

Outputs:
  ApiEndpoint:
    Description: 'API Gateway endpoint URL'
    Value: !Sub 'https://${NutriScanAPI}.execute-api.${AWS::Region}.amazonaws.com/prod'